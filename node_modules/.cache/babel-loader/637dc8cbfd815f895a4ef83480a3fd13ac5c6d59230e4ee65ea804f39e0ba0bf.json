{"ast":null,"code":"import { utils } from \"ethers\";\nexport function handleMultipleWalletExtensions(provider) {\n  var _providers$find;\n  let predicate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : p => p.isMetaMask;\n  let defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : provider;\n  const {\n    providers = []\n  } = provider;\n  return (_providers$find = providers.find(predicate)) !== null && _providers$find !== void 0 ? _providers$find : defaultValue;\n}\nexport function serializeChainId(chainId) {\n  return utils.hexStripZeros(utils.hexlify(chainId));\n}\nexport function serializeNetwork(net) {\n  return {\n    chainId: serializeChainId(net.chainId),\n    chainName: net.name,\n    rpcUrls: [net.rpcUrl],\n    blockExplorerUrls: [net.blockExplorerUrl],\n    nativeCurrency: {\n      name: net.name,\n      symbol: net.symbol,\n      decimals: 18\n    }\n  };\n}","map":{"version":3,"names":["utils","handleMultipleWalletExtensions","provider","_providers$find","predicate","arguments","length","undefined","p","isMetaMask","defaultValue","providers","find","serializeChainId","chainId","hexStripZeros","hexlify","serializeNetwork","net","chainName","name","rpcUrls","rpcUrl","blockExplorerUrls","blockExplorerUrl","nativeCurrency","symbol","decimals"],"sources":["/Users/val/Desktop/PROGM/meta-smart-front/src/services/wallet/utils.ts"],"sourcesContent":["import {EthereumProvider, InjectedProvider, Network} from './types';\nimport {utils} from \"ethers\";\nexport function handleMultipleWalletExtensions(\n    provider: EthereumProvider,\n    predicate = (p: InjectedProvider) => p.isMetaMask,\n    defaultValue = provider\n) {\n    const {providers = []} = provider;\n    return providers.find(predicate) ?? defaultValue;\n}\nexport function serializeChainId(chainId: number) {\n    return utils.hexStripZeros(utils.hexlify(chainId));\n}\nexport function serializeNetwork(net: Network) {\n    return {\n        chainId: serializeChainId(net.chainId),\n        chainName: net.name,\n        rpcUrls: [net.rpcUrl],\n        blockExplorerUrls: [net.blockExplorerUrl],\n        nativeCurrency: {\n            name: net.name,\n            symbol: net.symbol,\n            decimals: 18,\n        },\n    };\n}\n\n"],"mappings":"AACA,SAAQA,KAAK,QAAO,QAAQ;AAC5B,OAAO,SAASC,8BAA8BA,CAC1CC,QAA0B,EAG5B;EAAA,IAAAC,eAAA;EAAA,IAFEC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAIG,CAAmB,IAAKA,CAAC,CAACC,UAAU;EAAA,IACjDC,YAAY,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,QAAQ;EAEvB,MAAM;IAACS,SAAS,GAAG;EAAE,CAAC,GAAGT,QAAQ;EACjC,QAAAC,eAAA,GAAOQ,SAAS,CAACC,IAAI,CAACR,SAAS,CAAC,cAAAD,eAAA,cAAAA,eAAA,GAAIO,YAAY;AACpD;AACA,OAAO,SAASG,gBAAgBA,CAACC,OAAe,EAAE;EAC9C,OAAOd,KAAK,CAACe,aAAa,CAACf,KAAK,CAACgB,OAAO,CAACF,OAAO,CAAC,CAAC;AACtD;AACA,OAAO,SAASG,gBAAgBA,CAACC,GAAY,EAAE;EAC3C,OAAO;IACHJ,OAAO,EAAED,gBAAgB,CAACK,GAAG,CAACJ,OAAO,CAAC;IACtCK,SAAS,EAAED,GAAG,CAACE,IAAI;IACnBC,OAAO,EAAE,CAACH,GAAG,CAACI,MAAM,CAAC;IACrBC,iBAAiB,EAAE,CAACL,GAAG,CAACM,gBAAgB,CAAC;IACzCC,cAAc,EAAE;MACZL,IAAI,EAAEF,GAAG,CAACE,IAAI;MACdM,MAAM,EAAER,GAAG,CAACQ,MAAM;MAClBC,QAAQ,EAAE;IACd;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}