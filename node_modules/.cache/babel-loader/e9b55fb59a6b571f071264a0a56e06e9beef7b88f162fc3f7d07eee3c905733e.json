{"ast":null,"code":"var _jsxFileName = \"/Users/ilya/Downloads/meta-smart-front/src/Components/Pages/Landing/Landing.tsx\",\n  _s = $RefreshSig$();\nimport './Landing.scss';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { MetamaskWallet } from \"../../../services/wallet/metamask-wallet\";\nimport Header from \"./Header\";\nimport HeroSection from \"./HeroSection\";\nimport ProfilePopUp from \"./ProfilePopUp\";\nimport BuyTokens from \"./BuyTokens\";\nimport StakingPools from \"./StakingPools\";\nimport { ethers } from \"ethers\";\nimport modalTypes from \"../../../services/modals/modalTypes\";\nimport { modal$ } from \"../../../services/modals\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  _s();\n  const modal = useStore(modal$);\n  const isMobile = window.innerWidth < 1366;\n  const [walletIsLoading, setWalletIsLoading] = useState(false);\n  const [wallet, setWallet] = useState(null);\n  const [addr, setAddr] = useState('');\n  const [refCode, setRefCode] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('');\n  const [stakes, setStakes] = useState([]);\n  const [teamInfo, setTeamInfo] = useState([]);\n  const [poolsInfo, setPoolsInfo] = useState([]);\n  const [refReward, serRefReward] = useState('');\n  const [mockAllowance, setMockAllowance] = useState('');\n  const poolRef = useRef(null);\n  const initBcData = async () => {\n    const wallet = await new MetamaskWallet();\n    wallet && setWallet(wallet);\n    const pools = await wallet.getPoolsInfo();\n    pools && setPoolsInfo(pools);\n    setWalletIsLoading(true);\n  };\n  useEffect(() => {\n    initBcData();\n  }, []);\n\n  // useEffect(() => {\n  //     wallet?.on('MSmartPurchased', (amount: string) => {\n  //         const total = Number(formatEther(amount)) + Number(tokenBalance)\n  //         console.log(total)\n  //         setTokenBalance(total.toString())\n  //     })\n  // }, [wallet, tokenBalance])\n\n  const connectWallet = async () => {\n    try {\n      await wallet.connect();\n      const addr = await wallet.getAddr();\n      addr && setAddr(addr);\n      const balanceTokens = await wallet.getTokenBalance();\n      balanceTokens && setTokenBalance(ethers.utils.formatEther(balanceTokens));\n      const stakes = await wallet.getStakes();\n      setStakes(stakes);\n      const team = await wallet.getTeamInfo();\n      setTeamInfo(team);\n      const referralRew = await wallet.getReferralRewards();\n      referralRew && serRefReward(ethers.utils.formatEther(referralRew));\n\n      // console.log({\n      //     addr: addr, wallet: wallet,\n      //     mcTokens: ethers.utils.formatEther(balanceTokens),\n      //     stakes: stakes, team: team, pools: pools,\n      //     refRew: referralRew\n      // })\n    } catch (e) {\n      console.log(e);\n      switch (e.code === 4200) {\n        case isMobile:\n          window.open('https://metamask.app.link/dapp/172.20.10.7:3000/payments/');\n          break;\n        case !isMobile:\n          window.open('https://metamask.io/');\n          break;\n      }\n    }\n  };\n  const disconnectWallet = async () => {\n    try {\n      wallet.disconnect();\n      setWallet(null);\n      setAddr('');\n      setRefCode('');\n      setTokenBalance('');\n      setStakes([]);\n      setTeamInfo([]);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const buyMc = async (amount, refId) => {\n    try {\n      await wallet.buyToken(amount, refId);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const getAllowance = async () => {\n    try {\n      setMockAllowance(await wallet.getAllowance());\n    } catch (e) {\n      console.error(e);\n      setMockAllowance('0');\n    }\n  };\n  const scrollToPools = () => {\n    if (poolRef && poolRef.current) {\n      // poolRef.current.scrollIntoView({behavior: \"smooth\", block: \"nearest\"});\n    }\n  };\n  const generateRefCode = async () => {\n    try {\n      const refCode = await wallet.generateRefCode(addr);\n      setRefCode(refCode);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const stake = async (type, amount, period) => {\n    try {\n      await wallet.stakeTokens(type, amount, period);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const claimReward = async (type, index) => {\n    try {\n      await wallet.claimRewards(type, index);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames({\n      'landing': true\n      // 'landing--loading': !walletIsLoading,\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      scrollToPools: scrollToPools,\n      addr: addr,\n      connectWallet: connectWallet,\n      disconnectWallet: disconnectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'landing-body',\n      children: [/*#__PURE__*/_jsxDEV(HeroSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), modal.type === modalTypes.PROFILE_POPUP && /*#__PURE__*/_jsxDEV(ProfilePopUp, {\n        referralRewards: refReward,\n        balance: tokenBalance,\n        team: teamInfo,\n        generateRefCode: generateRefCode,\n        refCode: refCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BuyTokens, {\n        balance: tokenBalance,\n        wallet: wallet,\n        buyMc: buyMc,\n        getAllowance: getAllowance,\n        allowance: mockAllowance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StakingPools, {\n        refProp: poolRef,\n        claimReward: claimReward,\n        stakes: stakes,\n        stake: stake,\n        balance: tokenBalance,\n        poolsTvl: poolsInfo,\n        ...modal.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'landing__support',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(Landing, \"ZySPCHzraCh89UIT2t57lZqdLUo=\", false, function () {\n  return [useStore];\n});\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useStore","MetamaskWallet","Header","HeroSection","ProfilePopUp","BuyTokens","StakingPools","ethers","modalTypes","modal$","classNames","jsxDEV","_jsxDEV","Landing","_s","modal","isMobile","window","innerWidth","walletIsLoading","setWalletIsLoading","wallet","setWallet","addr","setAddr","refCode","setRefCode","tokenBalance","setTokenBalance","stakes","setStakes","teamInfo","setTeamInfo","poolsInfo","setPoolsInfo","refReward","serRefReward","mockAllowance","setMockAllowance","poolRef","initBcData","pools","getPoolsInfo","connectWallet","connect","getAddr","balanceTokens","getTokenBalance","utils","formatEther","getStakes","team","getTeamInfo","referralRew","getReferralRewards","e","console","log","code","open","disconnectWallet","disconnect","error","buyMc","amount","refId","buyToken","getAllowance","scrollToPools","current","generateRefCode","stake","type","period","stakeTokens","claimReward","index","claimRewards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","PROFILE_POPUP","referralRewards","balance","allowance","refProp","poolsTvl","props","_c","$RefreshReg$"],"sources":["/Users/ilya/Downloads/meta-smart-front/src/Components/Pages/Landing/Landing.tsx"],"sourcesContent":["import './Landing.scss'\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {useStore} from \"effector-react\";\n\nimport {MetamaskWallet} from \"../../../services/wallet/metamask-wallet\";\nimport Header from \"./Header\";\nimport HeroSection from \"./HeroSection\";\nimport ProfilePopUp from \"./ProfilePopUp\";\nimport BuyTokens from \"./BuyTokens\";\nimport StakingPools from \"./StakingPools\";\nimport {ethers} from \"ethers\";\nimport modalTypes from \"../../../services/modals/modalTypes\";\nimport {modal$} from \"../../../services/modals\";\nimport {PoolType} from \"./StakingPools/StakingPools\";\nimport classNames from \"classnames\";\n\n\ninterface ILanding {\n\n}\n\nconst Landing: React.FC<ILanding> = () => {\n    const modal = useStore(modal$)\n    const isMobile = window.innerWidth < 1366\n    const [walletIsLoading, setWalletIsLoading] = useState(false)\n    const [wallet, setWallet] = useState<any>(null)\n    const [addr, setAddr] = useState<any>('')\n    const [refCode, setRefCode] = useState('')\n    const [tokenBalance, setTokenBalance] = useState('')\n    const [stakes, setStakes] = useState<any>([])\n    const [teamInfo, setTeamInfo] = useState([])\n    const [poolsInfo, setPoolsInfo] = useState<any>([])\n    const [refReward, serRefReward] = useState('')\n\n    const [mockAllowance, setMockAllowance] = useState('');\n\n    const poolRef = useRef(null)\n\n    const initBcData = async () => {\n        const wallet = await new MetamaskWallet()\n        wallet && setWallet(wallet)\n        const pools = await wallet.getPoolsInfo()\n        pools && setPoolsInfo(pools)\n        setWalletIsLoading(true)\n    }\n\n    useEffect(() => {\n        initBcData()\n    }, [])\n\n    // useEffect(() => {\n    //     wallet?.on('MSmartPurchased', (amount: string) => {\n    //         const total = Number(formatEther(amount)) + Number(tokenBalance)\n    //         console.log(total)\n    //         setTokenBalance(total.toString())\n    //     })\n    // }, [wallet, tokenBalance])\n\n\n    const connectWallet = async () => {\n        try {\n            await wallet.connect()\n            const addr = await wallet.getAddr()\n            addr && setAddr(addr)\n            const balanceTokens = await wallet.getTokenBalance()\n            balanceTokens && setTokenBalance((ethers.utils.formatEther(balanceTokens)))\n            const stakes = await wallet.getStakes()\n            setStakes(stakes)\n            const team = await wallet.getTeamInfo()\n            setTeamInfo(team)\n            const referralRew = await wallet.getReferralRewards()\n            referralRew && serRefReward(ethers.utils.formatEther(referralRew))\n\n            // console.log({\n            //     addr: addr, wallet: wallet,\n            //     mcTokens: ethers.utils.formatEther(balanceTokens),\n            //     stakes: stakes, team: team, pools: pools,\n            //     refRew: referralRew\n            // })\n        } catch (e: any) {\n            console.log(e)\n            switch (e.code === 4200) {\n                case isMobile:\n                    window.open('https://metamask.app.link/dapp/172.20.10.7:3000/payments/')\n                    break\n\n                case !isMobile:\n                    window.open('https://metamask.io/')\n                    break\n            }\n\n        }\n    }\n\n    const disconnectWallet = async () => {\n        try {\n            wallet.disconnect()\n            setWallet(null)\n            setAddr('')\n            setRefCode('')\n            setTokenBalance('')\n            setStakes([])\n            setTeamInfo([])\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const buyMc = async (amount: string, refId: string) => {\n        try {\n            await wallet.buyToken(amount, refId)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getAllowance = async () => {\n        try {\n            setMockAllowance(await wallet.getAllowance());\n        } catch (e) {\n            console.error(e)\n            setMockAllowance('0');\n        }\n    }\n\n    const scrollToPools = () => {\n        if (poolRef && poolRef.current) {\n            // poolRef.current.scrollIntoView({behavior: \"smooth\", block: \"nearest\"});\n        }\n    }\n\n    const generateRefCode = async () => {\n        try {\n            const refCode = await wallet.generateRefCode(addr)\n            setRefCode(refCode)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const stake = async (type: PoolType, amount: string, period: string) => {\n        try {\n            await wallet.stakeTokens(type, amount, period)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const claimReward = async (type: PoolType, index: number) => {\n        try {\n            await wallet.claimRewards(type, index)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    return (\n        <div className={classNames({\n            'landing': true,\n            // 'landing--loading': !walletIsLoading,\n        })}>\n            <Header scrollToPools={scrollToPools} addr={addr} connectWallet={connectWallet}\n                    disconnectWallet={disconnectWallet}/>\n            <div className={'landing-body'}>\n                <HeroSection/>\n                {modal.type === modalTypes.PROFILE_POPUP &&\n                    <ProfilePopUp referralRewards={refReward} balance={tokenBalance} team={teamInfo}\n                                  generateRefCode={generateRefCode} refCode={refCode}/>\n                }\n                <BuyTokens balance={tokenBalance} wallet={wallet} buyMc={buyMc} getAllowance={getAllowance} allowance={mockAllowance}/>\n                <StakingPools refProp={poolRef} claimReward={claimReward} stakes={stakes} stake={stake}\n                              balance={tokenBalance} poolsTvl={poolsInfo} {...modal.props}/>\n            </div>\n            <div className={'landing__support'}>\n                <p>Поддержка</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Landing;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}